// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SuperAdminClient is the client API for SuperAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SuperAdminClient interface {
	SetTime(ctx context.Context, in *SetTimeRequest, opts ...grpc.CallOption) (*SetTimeResponse, error)
}

type superAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewSuperAdminClient(cc grpc.ClientConnInterface) SuperAdminClient {
	return &superAdminClient{cc}
}

func (c *superAdminClient) SetTime(ctx context.Context, in *SetTimeRequest, opts ...grpc.CallOption) (*SetTimeResponse, error) {
	out := new(SetTimeResponse)
	err := c.cc.Invoke(ctx, "/superadmin.SuperAdmin/SetTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuperAdminServer is the server API for SuperAdmin service.
// All implementations must embed UnimplementedSuperAdminServer
// for forward compatibility
type SuperAdminServer interface {
	SetTime(context.Context, *SetTimeRequest) (*SetTimeResponse, error)
	mustEmbedUnimplementedSuperAdminServer()
}

// UnimplementedSuperAdminServer must be embedded to have forward compatible implementations.
type UnimplementedSuperAdminServer struct {
}

func (UnimplementedSuperAdminServer) SetTime(context.Context, *SetTimeRequest) (*SetTimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTime not implemented")
}
func (UnimplementedSuperAdminServer) mustEmbedUnimplementedSuperAdminServer() {}

// UnsafeSuperAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SuperAdminServer will
// result in compilation errors.
type UnsafeSuperAdminServer interface {
	mustEmbedUnimplementedSuperAdminServer()
}

func RegisterSuperAdminServer(s grpc.ServiceRegistrar, srv SuperAdminServer) {
	s.RegisterService(&SuperAdmin_ServiceDesc, srv)
}

func _SuperAdmin_SetTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuperAdminServer).SetTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/superadmin.SuperAdmin/SetTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuperAdminServer).SetTime(ctx, req.(*SetTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SuperAdmin_ServiceDesc is the grpc.ServiceDesc for SuperAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SuperAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "superadmin.SuperAdmin",
	HandlerType: (*SuperAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetTime",
			Handler:    _SuperAdmin_SetTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "superadmin.proto",
}
